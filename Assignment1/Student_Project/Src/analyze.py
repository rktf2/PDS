# -*- coding: utf-8 -*-
"""analyze.py

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1I6xp0QZgwdKQ7hFSKig-BfLZXe1IRxeq
"""

# -*- coding: utf-8 -*-
"""Analyze_data

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1yyhzJXp5hjL25AhaEN3JNwtB6SQYPDDr
"""

from google.colab import files
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
from scipy.stats import ttest_ind

# Step 1: Upload the file
uploaded = files.upload()

# Step 2: Load the data into a DataFrame
df = pd.read_csv('cleaned_student_data.csv')

# Display the first few rows
print(df.head())

# Step 1: Check data types
print("Data Types:")
print(df.dtypes)

# Step 2: Filter only numeric columns for mean calculation
numeric_df = df.select_dtypes(include=['number'])
# 1. Histogram
plt.figure(figsize=(10, 6))
sns.histplot(df['math score'], bins=10, kde=True)
plt.title('Distribution of Math Scores')
plt.xlabel('Math Score')
plt.ylabel('Frequency')
plt.show()

# 2. Bar Plot
if not numeric_df.empty:
    avg_scores = numeric_df.mean()
    print("\nAverage Scores:")
    print(avg_scores)

    plt.figure(figsize=(10, 6))
    sns.barplot(x=avg_scores.index, y=avg_scores.values)
    plt.title('Average Scores by Subject')
    plt.ylabel('Average Score')
    plt.show()
else:
    print("No numeric columns found for calculating average scores.")
# 3. Box Plot
plt.figure(figsize=(10, 6))
sns.boxplot(data=df)
plt.title('Box Plot of Scores')
plt.ylabel('Scores')
plt.show()

# 4. Scatter Plot
plt.figure(figsize=(10, 6))
sns.scatterplot(x='math score', y='writing score', data=df)
plt.title('Scatter Plot of Math vs Writing Scores')
plt.xlabel('Math Score')
plt.ylabel('Writing Score')
plt.show()

# 5. Heatmap of Correlation
if not numeric_df.empty:
    correlation_matrix = numeric_df.corr()

    # Step 4: Heatmap of Correlation
    plt.figure(figsize=(8, 6))
    sns.heatmap(correlation_matrix, annot=True, cmap='YlGnBu')
    plt.title('Correlation Heatmap of Scores')
    plt.show()
else:
    print("No numeric columns found for correlation calculation.")